package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"stockels/graph/instance"
	stockModule "stockels/graph/module/stock"
	"stockels/middleware"
)

// StockSubscribes is the resolver for the stockSubscribes field.
func (r *mutationResolver) StockSubscribes(ctx context.Context, stocks []*instance.GetStockData) ([]*instance.Subscribtion, error) {
	user, err := middleware.ContextFromAuthMiddleware(ctx)
	if err != nil {
		panic(err.Error())
	}
	return stockModule.SubscribeMultipleStock(stocks, user)
}

// GetStocks is the resolver for the getStocks field.
func (r *queryResolver) GetStocks(ctx context.Context, stocks []*instance.GetStockData) ([]*instance.StockData, error) {
	return stockModule.GetMultipleStock(stocks)
}


