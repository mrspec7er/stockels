type StockData {
  symbol: String!
  name: String!
  description: String!
  sector: String!
  logo: String!
  website: String!
  openPrice: String!
  closePrice: String!
  highestPrice: String!
  lowestPrice: String!
  volume: String!
  lastUpdate: String!
  supportPercentage: Float!
  resistancePercentage: Float!
}

type StockDetailPrice {
  date: String!
  open: String!
  high: String!
  low: String!
  close: String!
  volume: Int!
}

type StockDetail {
  info: StockData!
  price: [StockDetailPrice!]!
}

type StockAnalytic {
  averageSupportPrice: Float!
  averageResistancePrice: Float!
  quarters: [QuarterAnalytic!]!
}

type QuarterAnalytic {
  quarter: String!
  supportPrice: Float!
  supportDate: String!
  supportVolume: Int!
  resistancePrice: Float!
  resistanceDate: String!
  resistanceVolume: Int!
}

input GetStockData {
  stockSymbol: String!
  supportPrice: Int!
  resistancePrice: Int!
}

extend type Query {
  getStocks(stocks: [GetStockData!]!): [StockData!]!
  getStockBySymbol(
    symbol: String!
    supportPrice: Int!
    resistancePrice: Int!
  ): StockData!
  getStockDetail(
    symbol: String!
    fromDate: String!
    toDate: String!
    supportPrice: Int!
    resistancePrice: Int!
  ): StockDetail!
  getStockAnalytic(symbol: String!, fromYear: Int!): StockAnalytic!
}
